Guide
Service URL
https://api.searchad.naver.com

Getting started
How to issue the API License and the secret key
Sign up for NAVER SEARCH ADVERTISER's Center(http://searchad.naver.com)

Go to http://manage.searchad.naver.com

Go to Tools > API Manager

Create API license

Examples
You can see sample code in the examples.
Notice
You can see what's new in the Notice
Release Note
You can read about the changes to the Search Ads API in the Release notes.

####

Sample Code
Language	Link
Java	https://github.com/naver/searchad-apidoc/tree/master/java-sample
PHP	https://github.com/naver/searchad-apidoc/tree/master/php-sample
C#	https://github.com/naver/searchad-apidoc/tree/master/csharp-sample
API Call
Issue the API License and the secret key
SEARCH ADVERTISER's Center Experience Zone [Tools > API Manager] Create API license

API License (API-KEY): Attached to the request message
Secret key (API_SECRET): Used for signature generation of the request message
Generate signature
sha256-hmac ( API_SECRET, Milliseconds since Unix Epoch + "." + http method + "." + request uri )
Milliseconds since Unix Epoch : http://currentmillis.com/

ex) 1457082455307.GET./ncc/campaigns

Call
HTTP Header

X-Timestamp : unix timestamp
X-API-KEY : Issued the API License (API-KEY)
X-Customer : Customer ID
X-Signature : Generated signature
curl example

$ curl \
  -H "X-Timestamp: 1457082455307" \
  -H "X-API-KEY: 0100000000e5b6598263137ca151c351b1ddc6f41da64a8475f4f2dd08c8ca2ef4e4247fa5" \
  -H "X-Customer: 338047" \
  -H "X-Signature: PY6keeelL+7HV+498Y83BLv4K65XJRxmfbnZYVzutCA=" \
  {serivce_url}/ncc/campaigns
Sample messages
HTTP Request

GET /ncc/campaigns HTTP/1.1
Host: {service_url}
X-Timestamp: 1457082455307
X-API-KEY: 0100000000e5b6598263137ca151c351b1ddc6f41da64a8475f4f2dd08c8ca2ef4e4247fa5
X-Customer: 338047
X-Signature: PY6keeelL+7HV+498Y83BLv4K65XJRxmfbnZYVzutCA=
(blank-line)
HTTP Response

HTTP/1.1 200 OK
x-transaction-id: AJ83GTFPN7FR2
Content-Length: 1234
Content-Type:application/json;charset=UTF-8
Date: Fri, 26 Oct 1979 10:07:36 GMT

[{
    "campaignTp": string,
    "customerId": integer,
    "dailyBudget": integer,
    "delFlag": integer,
    "deliveryMethod": integer,
    "editTm": datetime,
    "name": string,
    "nccCampaignId": string,
    "periodEndDt": datetime,
    "periodStartDt": datetime,
    "regTm": datetime,
    "status": string,
    "statusReason": string,
    "trackingMode": integer,
    "trackingUrl": string,
    "useDailyBudget": integer,
    "usePeriod": integer,
    "userLock": integer
}]


###

RelKwdStat
Resource representations
{
    "relKeyword": string,
    "monthlyPcQcCnt": string,
    "monthlyMobileQcCnt": string,
    "monthlyAvePcClkCnt": string,
    "monthlyAveMobileClkCnt": string,
    "monthlyAvePcCtr": string,
    "monthlyAveMobileCtr": string,
    "plAvgDepth": string,
    "compIdx": string
}

Property name	Data type	Description
relKeyword	string	
A related keyword

monthlyPcQcCnt	string	
Sum of PC query counts in recent 30 days. If the query count is less than 10, you get "<10".

monthlyMobileQcCnt	string	
Sum of Mobile query counts in recent 30 days. If the query count is less than 10, you get "<10".

monthlyAvePcClkCnt	string	
Average PC click counts per keyword's ad in recent 4 weeks. With no data, you get 0.

monthlyAveMobileClkCnt	string	
Average Mobile click counts per keyword's ad in recent 4 weeks. With no data, you get 0.

monthlyAvePcCtr	string	
Click-through rate of PC in recent 4 weeks. With no data, you get 0.

monthlyAveMobileCtr	string	
Click-through rate of Mobile in recent 4 weeks. With no data, you get 0.

plAvgDepth	string	
Average depth of PC ad in recent 4 weeks. With no data, you get 0.

compIdx	string	
A competitiveness index based on PC ad. low: low competitiveness, mid: middle competitiveness, high: high competitiveness


Methods
list
GET /keywordstool
Retrieves related keywords and their statistical indicators by query parameters. To determine search types and conditions, a user requests data by combining at least one parameter among business ID, ncc business channel ID, keyword hints, season, event ID and by using several conditional parameters.